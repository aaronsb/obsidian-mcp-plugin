name: Build and Release

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.gitignore'

env:
  PLUGIN_NAME: obsidian-mcp-plugin

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for version bumping

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Build plugin
        run: npm run build

      - name: Get version from manifest
        id: version
        run: |
          echo "version=$(jq -r '.version' manifest.json)" >> $GITHUB_OUTPUT
          echo "name=$(jq -r '.name' manifest.json)" >> $GITHUB_OUTPUT

      - name: Check if version tag exists
        id: check_tag
        run: |
          if git rev-parse "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        if: steps.check_tag.outputs.exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ steps.version.outputs.version }}" \
            --title "${{ steps.version.outputs.name }} v${{ steps.version.outputs.version }}" \
            --notes "## ${{ steps.version.outputs.name }} v${{ steps.version.outputs.version }}

          Auto-generated release from main branch.

          ### Installation via BRAT
          1. Install the BRAT plugin if you haven't already
          2. Command palette â†’ \"BRAT: Add a beta plugin for testing\"
          3. Enter: \`aaronsb/obsidian-mcp-plugin\`
          4. Enable the plugin in Community Plugins

          ### Changes
          See commit history for detailed changes in this release." \
            --prerelease \
            main.js \
            manifest.json \
            styles.css